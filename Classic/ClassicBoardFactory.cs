using System;
using System.Collections.Generic;
using MonopolyKata.Classic.Rules;
using MonopolyKata.Core;
using MonopolyKata.Core.Board;
using MonopolyKata.Core.Board.Properties;

namespace MonopolyKata.Classic
{
    public class ClassicBoardFactory
    {
        public const Int32 GoSalaryBonus = 200;
        public const Int32 IncomeTaxPercentage = 10;
        public const Int32 LuxuryTaxPaymentAmount = 75;
        public const Int32 MaximumIncomeTaxPaymentAmount = 200;

        public const Int32 RailroadPrice = 200;
        public const Int32 UtilityPrice = 150;

        public const Int32 BaseRailroadRent = 25;
        public const Int32 MediterraneanAvenueRent = 2;
        public const Int32 BalticAvenueRent = 4;
        public const Int32 OrientalAvenueRent = 6;
        public const Int32 VermontAvenueRent = 6;
        public const Int32 ConnecticutAvenueRent = 8;
        public const Int32 StCharlesPlaceRent = 10;
        public const Int32 StatesAvenueRent = 10;
        public const Int32 VirginiaAvenueRent = 12;
        public const Int32 StJamesPlaceRent = 14;
        public const Int32 TennesseeAvenueRent = 14;
        public const Int32 NewYorkAvenueRent = 16;
        public const Int32 KentuckyAvenueRent = 18;
        public const Int32 IndianaAvenueRent = 18;
        public const Int32 IllinoisAvenueRent = 20;
        public const Int32 AtlanticAvenueRent = 22;
        public const Int32 VentnorAvenueRent = 22;
        public const Int32 MarvinGardensRent = 24;
        public const Int32 PacificAvenueRent = 26;
        public const Int32 NorthCarolinaAvenueRent = 26;
        public const Int32 PennsylvaniaAvenueRent = 28;
        public const Int32 ParkPlaceRent = 35;
        public const Int32 BoardwalkRent = 50;

        public const Int32 MediterraneanAvenuePrice = 60;
        public const Int32 BalticAvenuePrice = 60;
        public const Int32 OrientalAvenuePrice = 100;
        public const Int32 VermontAvenuePrice = 100;
        public const Int32 ConnecticutAvenuePrice = 120;
        public const Int32 StCharlesPlacePrice = 140;
        public const Int32 StatesAvenuePrice = 140;
        public const Int32 VirginiaAvenuePrice = 160;
        public const Int32 StJamesPlacePrice = 180;
        public const Int32 TennesseeAvenuePrice = 180;
        public const Int32 NewYorkAvenuePrice = 200;
        public const Int32 KentuckyAvenuePrice = 220;
        public const Int32 IndianaAvenuePrice = 220;
        public const Int32 IllinoisAvenuePrice = 240;
        public const Int32 AtlanticAvenuePrice = 260;
        public const Int32 VentnorAvenuePrice = 260;
        public const Int32 MarvinGardensPrice = 280;
        public const Int32 PacificAvenuePrice = 300;
        public const Int32 NorthCarolinaAvenuePrice = 300;
        public const Int32 PennsylvaniaAvenuePrice = 320;
        public const Int32 ParkPlacePrice = 350;
        public const Int32 BoardwalkPrice = 400;

        public const Int32 GoLocation = 0;
        public const Int32 MediterraneanAvenueLocation = 1;
        public const Int32 CommunityChestOneLocation = 2;
        public const Int32 BalticAvenueLocation = 3;
        public const Int32 IncomeTaxLocation = 4;
        public const Int32 ReadingRailroadLocation = 5;
        public const Int32 OrientalAvenueLocation = 6;
        public const Int32 ChanceOneLocation = 7;
        public const Int32 VermontAvenueLocation = 8;
        public const Int32 ConnecticutAvenueLocation = 9;
        public const Int32 JailLocation = 10;
        public const Int32 JustVisitingLocation = 10;
        public const Int32 StCharlesPlaceLocation = 11;
        public const Int32 ElectricCompanyLocation = 12;
        public const Int32 StatesAvenueLocation = 13;
        public const Int32 VirginiaAvenueLocation = 14;
        public const Int32 PennsylvaniaRailroadLocation = 15;
        public const Int32 StJamesPlaceLocation = 16;
        public const Int32 CommunityChestTwoLocation = 17;
        public const Int32 TennesseeAvenueLocation = 18;
        public const Int32 NewYorkAvenueLocation = 19;
        public const Int32 FreeParkingLocation = 20;
        public const Int32 KentuckyAvenueLocation = 21;
        public const Int32 ChanceTwoLocation = 22;
        public const Int32 IndianaAvenueLocation = 23;
        public const Int32 IllinoisAvenueLocation = 24;
        public const Int32 BORailroadLocation = 25;
        public const Int32 AtlanticAvenueLocation = 26;
        public const Int32 VentnorAvenueLocation = 27;
        public const Int32 WaterWorksLocation = 28;
        public const Int32 MarvinGardensLocation = 29;
        public const Int32 GoToJailLocation = 30;
        public const Int32 PacificAvenueLocation = 31;
        public const Int32 NorthCarolinaAvenueLocation = 32;
        public const Int32 CommunityChestThreeLocation = 33;
        public const Int32 PennsylvaniaAvenueLocation = 34;
        public const Int32 ShortLineLocation = 35;
        public const Int32 ChanceThreeLocation = 36;
        public const Int32 ParkPlaceLocation = 37;
        public const Int32 LuxuryTaxLocation = 38;
        public const Int32 BoardwalkLocation = 39;
        public const Int32 NumberOfSpaces = 40;
        
        public static IEnumerable<Space> GetComponents(Dice dice)
        {
            var go = new Go(GoSalaryBonus);
            var mediterraneanAvenue = new Property(MediterraneanAvenuePrice, MediterraneanAvenueRent);
            var communityChestOne = new Space();
            var balticAvenue = new Property(BalticAvenuePrice, BalticAvenueRent);
            var incomeTax = new IncomeTax(IncomeTaxPercentage, MaximumIncomeTaxPaymentAmount);
            var readingRailrod = new Property(RailroadPrice, BaseRailroadRent);
            var orientalAvenue = new Property(OrientalAvenuePrice, OrientalAvenueRent);
            var chanceOne = new Space();
            var vermontAvenue = new Property(VermontAvenuePrice, VermontAvenueRent);
            var connecticutAvenue = new Property(ConnecticutAvenuePrice, ConnecticutAvenueRent);
            var justVisiting = new Space();
            var stCharlesPlace = new Property(StCharlesPlacePrice, StCharlesPlaceRent);
            var electricCompany = new Property(UtilityPrice, 0);
            var statesAvenue = new Property(StatesAvenuePrice, StatesAvenueRent);
            var virginiaAvenue = new Property(VirginiaAvenuePrice, VirginiaAvenueRent);
            var pennsylvaniaRailroad = new Property(RailroadPrice, BaseRailroadRent);
            var stJamesPlace = new Property(StJamesPlacePrice, StJamesPlaceRent);
            var communityChestTwo = new Space();
            var tennesseeAvenue = new Property(TennesseeAvenuePrice, TennesseeAvenueRent);
            var newYorkAvenue = new Property(NewYorkAvenuePrice, NewYorkAvenueRent);
            var freeParking = new Space();
            var kentuckyAvenue = new Property(KentuckyAvenuePrice, KentuckyAvenueRent);
            var chanceTwo = new Space();
            var indianaAvenue = new Property(IndianaAvenuePrice, IndianaAvenueRent);
            var illinoisAvenue = new Property(IllinoisAvenuePrice, IllinoisAvenueRent);
            var boRailroad = new Property(RailroadPrice, BaseRailroadRent);
            var atlanticAvenue = new Property(AtlanticAvenuePrice, AtlanticAvenueRent);
            var ventnorAvenue = new Property(VentnorAvenuePrice, VentnorAvenueRent);
            var waterWorks = new Property(UtilityPrice, 0);
            var marvinGardens = new Property(MarvinGardensPrice, MarvinGardensRent);
            var goToJail = new GoToJail(JustVisitingLocation);
            var pacificAvenue = new Property(PacificAvenuePrice, PacificAvenueRent);
            var northCarolinaAvenue = new Property(NorthCarolinaAvenuePrice, NorthCarolinaAvenueRent);
            var communityChestThree = new Space();
            var pennsylvaniaAvenue = new Property(PennsylvaniaAvenuePrice, PennsylvaniaAvenueRent);
            var shortLine = new Property(RailroadPrice, BaseRailroadRent);
            var chanceThree = new Space();
            var parkPlace = new Property(ParkPlacePrice, ParkPlaceRent);
            var luxuryTax = new LuxuryTax(LuxuryTaxPaymentAmount);
            var boardwalk = new Property(BoardwalkPrice, BoardwalkRent);

            var classicPropertyRentRule = new ClassicPropertyRentRule();

            var purpleGroup = new PropertyGroup(mediterraneanAvenue, balticAvenue);
            var lightBlueGroup = new PropertyGroup(orientalAvenue, vermontAvenue, connecticutAvenue);
            var violetGroup = new PropertyGroup(stCharlesPlace, statesAvenue, virginiaAvenue);
            var orangeGroup = new PropertyGroup(stJamesPlace, tennesseeAvenue, newYorkAvenue);
            var redGroup = new PropertyGroup(kentuckyAvenue, indianaAvenue, illinoisAvenue);
            var yellowGroup = new PropertyGroup(atlanticAvenue, ventnorAvenue, marvinGardens);
            var darkGreenGroup = new PropertyGroup(pacificAvenue, northCarolinaAvenue, pennsylvaniaAvenue);
            var darkBlueGroup = new PropertyGroup(parkPlace, boardwalk);
            var railroadGroup = new PropertyGroup(readingRailrod, pennsylvaniaRailroad, boRailroad, shortLine);
            var utilityGroup = new PropertyGroup(electricCompany, waterWorks);

            var spaces = new List<Space>();
            spaces.Add(go);
            spaces.Add(mediterraneanAvenue);
            spaces.Add(communityChestOne);
            spaces.Add(balticAvenue);
            spaces.Add(incomeTax);
            spaces.Add(readingRailrod);
            spaces.Add(orientalAvenue);
            spaces.Add(chanceOne);
            spaces.Add(vermontAvenue);
            spaces.Add(connecticutAvenue);
            spaces.Add(justVisiting);
            spaces.Add(stCharlesPlace);
            spaces.Add(electricCompany);
            spaces.Add(statesAvenue);
            spaces.Add(virginiaAvenue);
            spaces.Add(pennsylvaniaRailroad);
            spaces.Add(stJamesPlace);
            spaces.Add(communityChestTwo);
            spaces.Add(tennesseeAvenue);
            spaces.Add(newYorkAvenue);
            spaces.Add(freeParking);
            spaces.Add(kentuckyAvenue);
            spaces.Add(chanceTwo);
            spaces.Add(indianaAvenue);
            spaces.Add(illinoisAvenue);
            spaces.Add(boRailroad);
            spaces.Add(atlanticAvenue);
            spaces.Add(ventnorAvenue);
            spaces.Add(waterWorks);
            spaces.Add(marvinGardens);
            spaces.Add(goToJail);
            spaces.Add(pacificAvenue);
            spaces.Add(northCarolinaAvenue);
            spaces.Add(communityChestThree);
            spaces.Add(pennsylvaniaAvenue);
            spaces.Add(shortLine);
            spaces.Add(chanceThree);
            spaces.Add(parkPlace);
            spaces.Add(luxuryTax);
            spaces.Add(boardwalk);

            return spaces;
        }
    }
}